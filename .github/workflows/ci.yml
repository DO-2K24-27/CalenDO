name: CalenDO CI

on:
  push:
    branches: [ main ]

jobs:
  build-and-test-backend:
    runs-on: github-runner-do
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - name: Install dependencies
        working-directory: ./backend
        run: go mod download

      - name: Build
        working-directory: ./backend
        run: go build -v ./...

      - name: Test
        working-directory: ./backend
        run: go test -v ./...

      - name: Generate Swagger docs
        working-directory: ./backend
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -g api/main.go -o docs

  build-and-test-ical-importer:
    runs-on: github-runner-do
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - name: Install dependencies
        working-directory: ./ical-importer
        run: go mod download

      - name: Build
        working-directory: ./ical-importer
        run: go build -v

      - name: Test
        working-directory: ./ical-importer
        run: go test -v ./...
  
  build-and-test-frontend:
    runs-on: github-runner-do
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint
        working-directory: ./frontend
        run: npm run lint

      - name: Build
        working-directory: ./frontend
        run: npm run build

  docker-backend:
    needs: [build-and-test-backend]
    runs-on: github-runner-do
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ vars.REGISTRY_URL }}/calendo-backend:${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/calendo-backend:latest

      - name: Keyless signing of Backend Docker image
        run: |
          export COSIGN_EXPERIMENTAL=1
          cosign sign -y ${{ vars.REGISTRY_URL }}/calendo-backend:${{ github.sha }}
          cosign sign -y ${{ vars.REGISTRY_URL }}/calendo-backend:latest

  docker-ical-importer:
    needs: [build-and-test-ical-importer]
    runs-on: github-runner-do
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push iCal Importer Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./ical-importer
          push: true
          tags: |
            ${{ vars.REGISTRY_URL }}/calendo-ical-importer:${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/calendo-ical-importer:latest

      - name: Keyless signing of iCal Importer Docker image
        run: |
          export COSIGN_EXPERIMENTAL=1
          cosign sign -y ${{ vars.REGISTRY_URL }}/calendo-ical-importer:${{ github.sha }}
          cosign sign -y ${{ vars.REGISTRY_URL }}/calendo-ical-importer:latest

  docker-frontend:
    needs: [build-and-test-frontend]
    runs-on: github-runner-do
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ vars.REGISTRY_URL }}/calendo-frontend:${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/calendo-frontend:latest

      - name: Keyless signing of Frontend Docker image
        run: |
          export COSIGN_EXPERIMENTAL=1
          cosign sign -y ${{ vars.REGISTRY_URL }}/calendo-frontend:${{ github.sha }}
          cosign sign -y ${{ vars.REGISTRY_URL }}/calendo-frontend:latest

  deploy:
    needs: [docker-backend, docker-frontend, docker-ical-importer]
    runs-on: github-runner-do
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      
      - name: Configure Kubernetes
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      
      - name: Deploy to Kubernetes with Helm
        run: |
          helm dependency build ./helm
          helm upgrade --install calendo ./helm \
            --set backend.image.repository=${{ vars.REGISTRY_URL }}/calendo-backend \
            --set backend.image.tag=${{ github.sha }} \
            --set backend.image.pullPolicy=IfNotPresent \
            --set frontend.image.repository=${{ vars.REGISTRY_URL }}/calendo-frontend \
            --set frontend.image.tag=${{ github.sha }} \
            --set frontend.image.pullPolicy=IfNotPresent \
            --set icalImporter.image.repository=${{ vars.REGISTRY_URL }}/calendo-ical-importer \
            --set icalImporter.image.tag=${{ github.sha }} \
            --set icalImporter.image.pullPolicy=IfNotPresent \
            --namespace hugo-calendo --create-namespace \
            --wait --timeout 15m
